@using System.Xml.Schema
@using Buf.Meldingsutveksler.SkjemaVerktoy.Tekster
@using Demo.Fagsystem.Models.Utils
@using Demo.Fagsystem.Models.ViewModels

@model PropertyRendererModel
@{

    var caption = Model.GetCaption(true);
    var elements = TeksterUtils.GetEnrichedChildren(Model.Melding.SelectedSchema, Model.Prop);
    var description = Model.GetDescription();
    string cssClass = "synlig_gruppe";
    var prefilled = Model.Melding.GetPrefilledValueFor(Model.GetId());
    string collapsedGroupClass = (prefilled?.InitiallyClosed == true) ? "collapsedGroup" : "";
    string onClickHandler = (prefilled?.InitiallyClosed == true) ? $"toggleCollapseContainer('{@Model.GetId()}');" : "";

    // Spesifikke properties for BarnetsSituasjon

    var outerElement = elements.FirstOrDefault(el => el.Element.Id == "BUF_CCD23FB1-1CEE-4F26-AB89-4E45FCF6214A") // DimensjonVurdering
        ?? throw new Exception("Finner ikke element 'DimensjonVurdering')");
    var innerElement = elements.FirstOrDefault(el => el.Element.Id == "BUF_5E9BDD35-9188-4C44-9921-F557F4E8BB08") // OmradeBeskrivelse
        ?? throw new Exception("Finner ikke element 'OmradeBeskrivelse')");
    //
    <div class="@cssClass @collapsedGroupClass" id="@Model.GetId()" onclick="@onClickHandler">
        <span class="gruppetekst">@caption</span>
        @await Html.PartialAsync($"/Pages/Partial/XmlElement/Beskrivelse.cshtml", description)
        <div class="collapseContainer">
            @foreach (var enrichedElement in elements)
            {
                var element = enrichedElement.Element;
                if (element == outerElement.Element)
                {
                    var innerElementModel = new PropertyRendererModel(Model, Model.Melding, $"{Model.GetId()}", innerElement.Element);
                    innerElementModel.CustomCaptionPattern = "Område: {0}";
                    var outerElementModel = new PropertyRendererModel(Model, Model.Melding, $"{Model.GetId()}", element, null, innerElementModel, 0);
                    outerElementModel.CustomCaptionPattern = "Dimensjon: {0}";
                    outerElementModel.CustomCaptionStyle = "dimensjon_tittel";
                    outerElementModel.KodelisteFilterVariabel = "dimensjon";
                    string outerControlName = RenderUtils.GetControlNameForProperty(element);
                    @await Html.PartialAsync($"/Pages/Partial/XmlElement/{outerControlName}.cshtml", outerElementModel)
                }
                else if (element == innerElement.Element)
                {
                    // skip, er rendret i elementet over
                }
                else
                {
                    bool skipRender = Model.SkipProp != null && element is XmlSchemaElement el && el.ElementSchemaType == Model.SkipProp;
                    if (!skipRender)
                    {
                        <hr />
                        <div class="variabel">
                            @{

                                var elementModel = new PropertyRendererModel(Model, Model.Melding, $"{Model.GetId()}", element);

                                elementModel.CustomCaptionStyle = "dimensjon_tittel";
                                string controlName = RenderUtils.GetControlNameForProperty(element);
                        }
                            @await Html.PartialAsync($"/Pages/Partial/XmlElement/{controlName}.cshtml", elementModel)
                        </div>
                    }
                }
            }
        </div>
    </div>
}